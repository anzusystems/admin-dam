#!/bin/bash
# Script used to run the tests inside the application docker container

#######################################################################################################################
# Default variables
#######################################################################################################################
PROJECT_ROOT="$(cd "$(dirname "${BASH_SOURCE[0]}")"/.. && pwd)"
ARGS="$*"
DATE_EPOCH_TIME="$(date +%s)"
BROWSER_OPTIONS=""
BROWSER="electron"
ENV="local"
TAGS=""
TAG=""
TEST_SPEC=""
RUNNER="yarn run"
DASHBOARD_OPTIONS=""

cd "${PROJECT_ROOT}" || exit 1
# Go through all command line arguments and setup variables accordingly
while [ "$#" -gt 0 ]; do
    case $1 in
    -b)
        BROWSER="$2"
        BROWSER_OPTIONS="--browser ${BROWSER}"
        shift 2
        continue
        ;;
    --browser*)
        BROWSER="${1#*=}"
        BROWSER_OPTIONS="--browser ${BROWSER}"
        shift 1
        continue
        ;;
    -e)
        ENV=$2
        shift 2
        continue
        ;;
    --env*)
        ENV="${1#*=}"
        shift 1
        continue
        ;;
    -s)
        TEST_SPEC="--spec $2,"
        shift 2
        continue
        ;;
    --spec*)
        TEST_SPEC="--spec ${1#*=},"
        shift 1
        continue
        ;;
    -t)
        TAGS=$2
        shift 2
        continue
        ;;
    --tags*)
        TAGS="${1#*=}"
        shift 1
        continue
        ;;
    --tag)
        TAG=$2
        shift 2
        continue
        ;;
    --tag=*)
        TAG="${1#*=}"
        shift 1
        continue
        ;;
    --dashboard)
        DASHBOARD_OPTIONS="--record --key ${CYPRESS_DASHBOARD_KEY} --tag ${ENV},${TAGS},${TAG}"
        shift 1
        continue
        ;;
    *)
        echo "[WARN] Unknown command line switch: $1"
        shift 1
        ;;
    esac
done

# Ensure that the user has provided the terraform environment
if [ -n "${BROWSER}" ] && [[ ! ${BROWSER} =~ ^electron$|^chrome$ ]]; then
    echo "[ERROR] Invalid value using '-b, --browser' option"
    help
    exit
fi

# Ensure that the user has provided the terraform environment
if [[ ! ${ENV} =~ ^local$ ]] && [ ! -f "cypress/config/${ENV}.ts" ]; then
    echo "[ERROR] config file ${ENV}.ts does not exist in cypress/config"
    exit
fi

if [ -f /.dockerenv ]; then
      if ! yarn cypress verify >/dev/null 2>&1; then
          yarn cypress install --force
      fi
      # shellcheck disable=SC2086
      TZ=Europe/Bratislava dbus-launch ${RUNNER} cypress run \
         --config-file cypress/config/cypress.config.ts\
         --headless \
         --env env=${ENV},grepTags=${TAGS} \
         ${BROWSER_OPTIONS} \
         ${TEST_SPEC} \
         ${DASHBOARD_OPTIONS}
fi

bin/docker-compose exec --user node app bash -c \'bin/test "${ARGS}"\'
