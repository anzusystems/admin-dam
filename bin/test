#!/bin/bash
# Script used to run the tests in the application container
#######################################################################################################################
# Default variables
#######################################################################################################################
PROJECT_ROOT="$(cd "$(dirname "${BASH_SOURCE[0]}")"/.. && pwd)"
ARGS="$*"
BROWSER="chrome"
ENV="local"
FILTER=""
TAG=""
RUNNER="yarn"
DASHBOARD_OPTIONS="--record false"
CONFIG_FILE="cypress/config/cypress.config.ts"

cd "${PROJECT_ROOT}" || exit 1
# Initialize default variables
# shellcheck disable=SC1091
. ./bin/docker-libvariables
# Initialize functions
# shellcheck disable=SC1091
. ./bin/docker-libfunctions
docker_env_vars

function help() {
    echo -en "$(printf %q "${BASH_SOURCE[0]}") [OPERATION] [OPTIONS]...
    \nBash script used to run the tests in the application container

    Options:
        -e --env     (Optional) Environment of the project (Allowed values: local | dev | stg, Default: local)
        -b --browser (Optional) Browser for test execution (Allowed values: chrome | electron | firefox, Default: chrome)
        -f --filter  (Optional) Comma separated list of filters (Default: n/a - all tests)
        -t --tag     (Optional) Only for dashboard runs tags for cypress dashboard list
        -d           (Optional) Cypress dashboard run, results will be stored in dashboard as well as in 'cypress/report' folder

    Examples:
        $(printf %q "${BASH_SOURCE[0]}") -e local -b chrome -f @datepicker,@nl --tag Docker,Web -d
    \n"
}

#######################################################################################################################
# Go through all command line arguments and setup variables accordingly
#######################################################################################################################
while [ "$#" -gt 0 ]; do
    case $1 in
    -b)
        BROWSER=$2
        shift 2
        continue
        ;;
    --browser*)
        BROWSER=${1#*=}
        shift 1
        continue
        ;;
    -e)
        ENV=$2
        shift 2
        continue
        ;;
    --env*)
        ENV=${1#*=}
        shift 1
        continue
        ;;
    -f)
        FILTER=$2
        shift 2
        continue
        ;;
    --filter*)
        FILTER=${1#*=}
        shift 1
        continue
        ;;
    -t)
        TAG=$2
        shift 2
        continue
        ;;
    --tag*)
        TAG=${1#*=}
        shift 1
        continue
        ;;
    -d)
        DASHBOARD_OPTIONS="--record --tag ${ENV},${TAG},${FILTER}"
        shift 1
        continue
        ;;
    *)
        echo "[WARN] Unknown command line switch: $1"
        help
        exit
        ;;
    esac
done

if [ -n "${BROWSER}" ] && [[ ! ${BROWSER} =~ ^electron$|^chrome$|^firefox$ ]]; then
    echo "[ERROR] Invalid value: '${BROWSER}' using '-b, --browser' option"
    help
    exit
fi

if [ -n "${ENV}" ] && [ ! -f "cypress/config/${ENV}.ts" ] || [[ ! ${ENV} =~ ^stg$|^dev$|^local$ ]]; then
    echo "[ERROR] Config file '${ENV}.ts' does not exist in cypress/config folder"
    help
    exit
fi

if [ -f /.dockerenv ]; then
    if [ ! -d "${CYPRESS_CACHE_FOLDER}" ] ; then
        ${RUNNER} cypress install --force
    fi
    # shellcheck disable=SC2086
    CYPRESS_grepTags=${FILTER} \
    dbus-launch ${RUNNER} cypress run \
        --config-file ${CONFIG_FILE} \
        --env cfg=${ENV} \
        --browser ${BROWSER} \
        ${DASHBOARD_OPTIONS}
    exit
fi

bin/docker-compose exec --user node "${DOCKER_COMPOSE_SERVICE_NAME}" bash -c \'bin/test "${ARGS}"\'
