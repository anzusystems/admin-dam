#!/bin/bash
# Script used to run the tests inside the application docker container

#######################################################################################################################
# Default variables
#######################################################################################################################
PROJECT_ROOT="$(cd "$(dirname "${BASH_SOURCE[0]}")"/.. && pwd)"
ARGS="$*"
DATE_EPOCH_TIME="$(date +%s)"
BROWSER_OPTIONS=""
BROWSER="electron"
BROWSER_GROUP_CHROME=""
BROWSER_GROUP_FIREFOX=""
ENV="local"
TAGS=""
TAG=""
TEST_SPEC=""
RUNNER="yarn run"
DASHBOARD_OPTIONS=""

cd "${PROJECT_ROOT}" || exit 1

function help() {
    echo -en "$(printf %q "${BASH_SOURCE[0]}") [OPERATION] [OPTIONS]...
    \nBash script used to run bash in the application docker container

    Container:
    admin-forum Run bash in the admin-forum docker container (default)

    Options:
    -b, --browser (Optional) Run tests in selected browser (Allowed values: electron|chrome|firefox|all, Default: electron)
    -e, --env     (Required) Environment of the project (Allowed values: staging|devel|local, Default: devel)
    -t, --tags    (Optional) Comma separated list of test suite tags. See docs for all tags. (Default: n/a)
    -s, --spec    (Optional) Relative dir to the test suite, wildcard can be used (Default: n/a - all tests)
    --dashboard   (Optional) Whether to push test results to cypress dashboard or create only local test results
                  You need to set CYPRESS_DASHBOARD_KEY in .env.docker.local

    Examples:
        $(printf %q "${BASH_SOURCE[0]}") --env=local --browser=chrome
        $(printf %q "${BASH_SOURCE[0]}") --env=stg --tags=@DAM --dashboard --spec=cypress/integration/features/ADMIN/**
        $(printf %q "${BASH_SOURCE[0]}") --env=stg --browser=chrome --dashboard --spec=cypress/integration/features/ADMIN/openAllComponents.feature
    \n"
}

# Go through all command line arguments and setup variables accordingly
while [ "$#" -gt 0 ]; do
    case $1 in
    -b)
        BROWSER="$2"
        BROWSER_OPTIONS="--browser ${BROWSER}"
        shift 2
        continue
        ;;
    --browser*)
        BROWSER="${1#*=}"
        BROWSER_OPTIONS="--browser ${BROWSER}"
        shift 1
        continue
        ;;
    -e)
        ENV=$2
        shift 2
        continue
        ;;
    --env*)
        ENV="${1#*=}"
        shift 1
        continue
        ;;
    -s)
        TEST_SPEC="--spec $2,"
        shift 2
        continue
        ;;
    --spec*)
        TEST_SPEC="--spec ${1#*=},"
        shift 1
        continue
        ;;
    -t)
        TAGS=$2
        shift 2
        continue
        ;;
    --tags*)
        TAGS="${1#*=}"
        shift 1
        continue
        ;;
    --tag)
        TAG=$2
        shift 2
        continue
        ;;
    --tag=*)
        TAG="${1#*=}"
        shift 1
        continue
        ;;
    --dashboard)
        DASHBOARD_OPTIONS="--record --key ${CYPRESS_DASHBOARD_KEY} --tag ${ENV},${TAGS},${TAG}"
        shift 1
        continue
        ;;
    -h | --help)
        help
        exit
        ;;
    *)
        echo "[WARN] Unknown command line switch: $1"
        shift 1
        ;;
    esac
done

# Ensure that the user has provided the terraform environment
if [ -z "${ENV}" ] || [[ ! ${ENV} =~ ^staging$|^devel$|^local$ ]]; then
    echo "[ERROR] Missing or invalid value using '-e, --env' option"
    help
    exit
fi

# Ensure that the user has provided the terraform environment
if [ -n "${BROWSER}" ] && [[ ! ${BROWSER} =~ ^all$|^electron$|^chrome$|^firefox$ ]]; then
    echo "[ERROR] Invalid value using '-b, --browser' option"
    help
    exit
fi

if [ -f /.dockerenv ]; then
      if ! yarn cypress verify >/dev/null 2>&1; then
          yarn cypress install --force
      fi
    if [ -n "${BROWSER}" ] && [ "${BROWSER}" == "all" ]; then
        if [ -n "${DASHBOARD_OPTIONS}" ]; then
            BROWSER_GROUP_CHROME="--ci-build-id ${DATE_EPOCH_TIME} --group Chrome"
            BROWSER_GROUP_FIREFOX="--ci-build-id ${DATE_EPOCH_TIME} --group Firefox"
        fi
        # shellcheck disable=SC2086
        TZ=Europe/Bratislava dbus-launch ${RUNNER} cypress run \
            --headless \
            --env env=${ENV},grepTags=${TAGS} \
            ${TEST_SPEC} \
            ${DASHBOARD_OPTIONS} \
            ${BROWSER_GROUP_CHROME} \
            --browser chrome &
        # shellcheck disable=SC2086
        TZ=Europe/Bratislava dbus-launch ${RUNNER} cypress run \
            --headless \
            --env env=${ENV},grepTags=${TAGS} \
            ${TEST_SPEC} \
            ${DASHBOARD_OPTIONS} \
            ${BROWSER_GROUP_FIREFOX} \
            --browser firefox
    else
        # shellcheck disable=SC2086
        TZ=Europe/Bratislava dbus-launch ${RUNNER} cypress run \
            --headless \
            --env env=${ENV},grepTags=${TAGS} \
            ${BROWSER_OPTIONS} \
            ${TEST_SPEC} \
            ${DASHBOARD_OPTIONS}
    fi
    exit
fi

bin/docker-compose exec --user node app bash -c \'bin/test "${ARGS}"\'
